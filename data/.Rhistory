geo = c()
sapply(1:10,function(x) ((5/6)^(x-1))/6)
1/6
geo = sapply(1:10,function(x) ((5/6)^(x-1))/6)
plot(1:10, geo)
plot(1:10, geo[1])
plot(1:10, c(geo[1], rep(NA,9))
)
plot(1:10, c(geo[1], rep(NA,9)),ylim = 0:.2)
plot(1:10, c(geo[1], rep(NA,9)),ylim = c(0,.2))
plot(1:10, c(geo[1], rep(NA,9)),ylim = c(0,.2),xlab = 'k = # of Bottles to Win',ylab = "Probability of Winning after k Bottles")
plot(1:10, c(geo[1], rep(NA,9)),ylim = c(0,.2),xlab = 'k = # of Bottles to Win',ylab = "Probability of Winning after k Bottles",pch = 19)
plot(1:10, c(geo[1:2], rep(NA,8)),ylim = c(0,.2),xlab = 'k = # of Bottles to Win',ylab = "Probability of Winning after k Bottles",pch = 19)
plot(1:10, c(geo[1:3], rep(NA,7)),ylim = c(0,.2),xlab = 'k = # of Bottles to Win',ylab = "Probability of Winning after k Bottles",pch = 19)
plot(1:10, c(geo[1:4], rep(NA,6)),ylim = c(0,.2),xlab = 'k = # of Bottles to Win',ylab = "Probability of Winning after k Bottles",pch = 19)
plot(1:10, c(geo[1:5], rep(NA,5)),ylim = c(0,.2),xlab = 'k = # of Bottles to Win',ylab = "Probability of Winning after k Bottles",pch = 19)
plot(1:10, c(geo[1:6], rep(NA,4)),ylim = c(0,.2),xlab = 'k = # of Bottles to Win',ylab = "Probability of Winning after k Bottles",pch = 19)
plot(1:10, c(geo[1:7], rep(NA,3)),ylim = c(0,.2),xlab = 'k = # of Bottles to Win',ylab = "Probability of Winning after k Bottles",pch = 19)
plot(1:10, c(geo[1:8], rep(NA,2)),ylim = c(0,.2),xlab = 'k = # of Bottles to Win',ylab = "Probability of Winning after k Bottles",pch = 19)
plot(1:10, c(geo[1:9], rep(NA,1)),ylim = c(0,.2),xlab = 'k = # of Bottles to Win',ylab = "Probability of Winning after k Bottles",pch = 19)
plot(1:10,geo,ylim = c(0,.2),xlab = 'k = # of Bottles to Win',ylab = "Probability of Winning after k Bottles",pch = 19)
plot(1:10, c(geo[1:7], rep(NA,3)),ylim = c(0,.2),xlab = 'k = # of Bottles to Win',ylab = "Probability of Winning after k Bottles",pch = 19)
plot(1:10, c(geo[1:5], rep(NA,5)),ylim = c(0,.2),xlab = 'k = # of Bottles to Win',ylab = "Probability of Winning after k Bottles",pch = 19)
plot(1:10, c(geo[1:6], rep(NA,4)),ylim = c(0,.2),xlab = 'k = # of Bottles to Win',ylab = "Probability of Winning after k Bottles",pch = 19)
plot(1:10, c(geo[1:7], rep(NA,3)),ylim = c(0,.2),xlab = 'k = # of Bottles to Win',ylab = "Probability of Winning after k Bottles",pch = 19)
plot(1:10, c(geo[1:8], rep(NA,2)),ylim = c(0,.2),xlab = 'k = # of Bottles to Win',ylab = "Probability of Winning after k Bottles",pch = 19)
plot(1:10, c(geo[1:9], rep(NA,1)),ylim = c(0,.2),xlab = 'k = # of Bottles to Win',ylab = "Probability of Winning after k Bottles",pch = 19)
plot(1:10,geo,ylim = c(0,.2),xlab = 'k = # of Bottles to Win',ylab = "Probability of Winning after k Bottles",pch = 19)
geo
install.packages("knitr")
install.packages("rmarkdown")
install.packages("rmarkdown")
knitr::opts_chunk$set(echo = TRUE)
duration = rep(c(rep(60,4),rep(90,4),rep(120,4)),4)
bread_type = as.factor(c(rep(1,12),rep(2,12),rep(3,12),rep(4,12)))
length(bread_type)
?rnorm
bread_type = as.factor(c(rep(1,12),rep(2,12),rep(3,12),rep(4,12)))
#toast time in seconds
duration = rep(c(rep(60,4),rep(90,4),rep(120,4)),4)
#Temperature Readings
#temp1 = "temperature at t = 1 minute"
initial_temp = rnorm(48)
temp1 = rnorm(48)
temp2 = rnorm(48)
temp3 = rnorm(48)
temp4 = rnorm(48)
temp5 = rnorm(48)
toast_temperature = data.frame(bread_type,duration,initial_temp,temp1,temp2,temp3,temp4,temp5)
toast_temperature[toast_temperature$initial_temp > 0]
toast_temperature[toast_temperature$initial_temp > 0,]
head(iris)
summary(iris$Sepal.Length)
boxplot(iris$Sepal.Length)
source('C:/Users/andre/Dropbox/College/VR/Microgames/project1teams.R')
sample(unity,12)
source('C:/Users/andre/Dropbox/College/VR/Microgames/project1teams.R')
sample(art)
#proportion of responses as nouns by trial for Round 1 in Study 1
n_vtv = c(0,0,0,0,0.1)
n_ntv1 = c(.7,.6,.3,.4,.3)
n_vtn1 = c(.5,.8,.6,.7,.7)
n_ntn = c(1,1,.9,1,.7)
#plot noun proportions by trial for Round 1 in Study 1
plot(n_vtv, pch = 19, col = 1, type = 'o', ylim = c(0,1), xlab = 'Trial', ylab = 'Noun Response Proportion',
main = 'Noun Response Proportion By Trial (Exp 1)')
lines(n_ntv1, pch = 17, type = 'o', col = 2)
lines(n_vtn1, pch = 21, type = 'o', col = 3)
lines(n_ntn, pch = 24, type = 'o', col = 4)
legend(1, .4,c('VtV', 'NtV', 'VtN', 'NtN'), col=1:4, pch=c(19,17,21,24))
modal_compare = matrix(c(.6,.6,.8,16/21),nrow = 2, ncol = 2, dimnames = list(c('Exp 1','Exp 2'),c('NtV','VtN')))
barplot(modal_compare,beside = TRUE, col = c('darkblue','red'), ylab = 'Noun Response Proportion',
main = 'Comparing Noun Modal Proportions in Experiments 1 and 2', ylim = 0:1)
source('C:/Users/andre/Dropbox/College/LC Lab/Junior Honors Thesis/Written Stuff/R Files/Oct 4 Report - Experiment 2.R')
source('C:/Users/andre/Dropbox/College/LC Lab/Junior Honors Thesis/Written Stuff/R Files/Oct 4 Report - Experiment 2.R')
?xtable.comment
?xtable::xtable
?xtable::xtable.comment
summary(iris$Sepal.Length)
summary(iris$Sepal.Length)[3]
install.packages("ggplot2")
install.packages("stringr")
install.packages("babynames")
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
ggplot(data = names, aes(x = year, y = n)) +
geom_line(aes(color = sex), size = 1) +
theme_bw()
names$year[which.max(names$n)]
myname <- "Andrew"
names <- subset(babynames, name == myname)
ggplot(data = names, aes(x = year, y = n)) +
geom_line(aes(color = sex), size = 1) +
theme_bw()
names$year[which.max(names$n)]
names$n[which.max(names$n)]
sum(names$n)
install.packages("shiny")
install.packages("testthat")
setwd("C:/Users/andre/Dropbox/College/Fall 16/Stat159/stat159-hw3/data")
advertising = read.csv(Advertising.csv,header=TRUE)
advertising = read.csv('Advertising.csv',header=TRUE)
names(lm(advertising$TV))
names(lm(Sales ~ TV,data=advertising))
length(lm(Sales ~ TV,data=advertising))
head(lm(Sales ~ TV,data=advertising))
length(lm(Sales ~ TV,data=advertising)$residuals)
length(lm(Sales ~ TV,data=advertising)$fitted.values)
length(advertising)
length(advertising$TV)
length(lm(Sales ~ TV,data=advertising)[1])
names(lm(Sales ~ TV,data=advertising))
head(lm(Sales ~ TV,data=advertising)$coefficients)
head(lm(Sales ~ TV,data=advertising)$terms)
head(lm(Sales ~ TV,data=advertising)$residuals)
head(lm(Sales ~ TV,data=advertising)$coefficients)
head(lm(Sales ~ TV,data=advertising)$fitted.values)
head(lm(Sales ~ TV,data=advertising)$model)
head(lm(Sales ~ TV,data=advertising)$model[[1]])
coefficients(lm(Sales ~ TV,data=advertising)$model)
coefficients(lm(Sales ~ TV,data=advertising))
model.extract(lm(Sales ~ TV,data=advertising))
model(lm(Sales ~ TV,data=advertising))
length(coefficients(lm(Sales ~ TV,data=advertising)))
length(coefficients(lm(Sales ~ TV + Radio,data=advertising)))
length(lm(Sales ~ TV + Radio,data=advertising)$coefficients)
